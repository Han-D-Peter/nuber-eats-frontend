[{"/Users/jaesunghan/Documents/nuber-eats-frontend/src/index.tsx":"1","/Users/jaesunghan/Documents/nuber-eats-frontend/src/reportWebVitals.ts":"2","/Users/jaesunghan/Documents/nuber-eats-frontend/src/App.tsx":"3","/Users/jaesunghan/Documents/nuber-eats-frontend/src/apollo.ts":"4","/Users/jaesunghan/Documents/nuber-eats-frontend/src/routers/logged-out-router.tsx":"5","/Users/jaesunghan/Documents/nuber-eats-frontend/src/routers/logged-in-router.tsx":"6","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/create-account.tsx":"7","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/login.tsx":"8","/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/form-error.tsx":"9","/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/button.tsx":"10","/Users/jaesunghan/Documents/nuber-eats-frontend/src/__generated__/globalTypes.ts":"11","/Users/jaesunghan/Documents/nuber-eats-frontend/src/constants.ts":"12","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/client/restaurant.tsx":"13","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/404.tsx":"14","/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/header.tsx":"15","/Users/jaesunghan/Documents/nuber-eats-frontend/src/hooks/useMe.tsx":"16"},{"size":755,"mtime":1611636981304,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1611193311394,"results":"19","hashOfConfig":"18"},{"size":399,"mtime":1611275253789,"results":"20","hashOfConfig":"18"},{"size":986,"mtime":1611639099746,"results":"21","hashOfConfig":"18"},{"size":565,"mtime":1611640978104,"results":"22","hashOfConfig":"18"},{"size":827,"mtime":1611642897327,"results":"23","hashOfConfig":"18"},{"size":4292,"mtime":1611640686221,"results":"24","hashOfConfig":"18"},{"size":3689,"mtime":1611638785667,"results":"25","hashOfConfig":"18"},{"size":236,"mtime":1611626924084,"results":"26","hashOfConfig":"18"},{"size":486,"mtime":1611630553142,"results":"27","hashOfConfig":"18"},{"size":706,"mtime":1611642715153,"results":"28","hashOfConfig":"18"},{"size":49,"mtime":1611639008807,"results":"29","hashOfConfig":"18"},{"size":83,"mtime":1611640079792,"results":"30","hashOfConfig":"18"},{"size":472,"mtime":1611641093677,"results":"31","hashOfConfig":"18"},{"size":760,"mtime":1611642702689,"results":"32","hashOfConfig":"18"},{"size":281,"mtime":1611642810895,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"ccxq2u",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jaesunghan/Documents/nuber-eats-frontend/src/index.tsx",[],["70","71"],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/reportWebVitals.ts",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/App.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/apollo.ts",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/routers/logged-out-router.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/routers/logged-in-router.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/create-account.tsx",["72","73","74"],"import { gql, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button } from \"../components/button\";\nimport { FormError } from \"../components/form-error\";\nimport nuberLogo from \"../images/logo.svg\";\nimport {\n  createAccountMutation,\n  createAccountMutationVariables\n} from \"../__generated__/createAccountMutation\";\nimport { UserRole } from \"../__generated__/globalTypes\";\n\nconst CREATE_ACCOUNT_MUTATION = gql`\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\n    createAccount(input: $createAccountInput) {\n      ok\n      error\n    }\n  }\n`;\n\ninterface ICreateAccountForm {\n  email: string;\n  password: string;\n  role: UserRole;\n}\n\nexport const CreateAccount = () => {\n  const { register, getValues, errors, handleSubmit, formState } = useForm<\n    ICreateAccountForm\n  >({\n    mode: \"onChange\",\n    defaultValues: {\n      role: UserRole.Client\n    }\n  });\n  const history = useHistory();\n  const onCompleted = (data: createAccountMutation) => {\n    const {\n      createAccount: { ok }\n    } = data;\n    if (ok) {\n      alert(\"Account Created! Log in now!\");\n      history.push(\"/\");\n    }\n  };\n  const [\n    createAccountMutation,\n    { loading, data: createAccountMutationResult }\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\n    CREATE_ACCOUNT_MUTATION,\n    {\n      onCompleted\n    }\n  );\n  const onSubmit = () => {\n    if (!loading) {\n      const { email, password, role } = getValues();\n      createAccountMutation({\n        variables: {\n          createAccountInput: { email, password, role }\n        }\n      });\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\n      <Helmet>\n        <title>Create Account | Nuber Eats</title>\n      </Helmet>\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\n        <img src={nuberLogo} className=\"w-52 mb-10\" />\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\n          Let's get started\n        </h4>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"grid gap-3 mt-5 w-full mb-5\"\n        >\n          <input\n            ref={register({\n              required: \"Email is required\",\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            })}\n            name=\"email\"\n            required\n            type=\"email\"\n            placeholder=\"Email\"\n            className=\"input\"\n          />\n          {errors.email?.message && (\n            <FormError errorMessage={errors.email?.message} />\n          )}\n          {errors.email?.type === \"pattern\" && (\n            <FormError errorMessage={\"Please enter a valid email\"} />\n          )}\n          <input\n            ref={register({ required: \"Password is required\" })}\n            required\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"input\"\n          />\n          {errors.password?.message && (\n            <FormError errorMessage={errors.password?.message} />\n          )}\n          {errors.password?.type === \"minLength\" && (\n            <FormError errorMessage=\"Password must be more than 10 chars.\" />\n          )}\n          <select\n            name=\"role\"\n            ref={register({ required: true })}\n            className=\"input\"\n          >\n            {Object.keys(UserRole).map((role, index) => (\n              <option key={index}>{role}</option>\n            ))}\n          </select>\n          <Button\n            canClick={formState.isValid}\n            loading={loading}\n            actionText={\"Create Account\"}\n          />\n          {createAccountMutationResult?.createAccount.error && (\n            <FormError\n              errorMessage={createAccountMutationResult.createAccount.error}\n            />\n          )}\n        </form>\n        <div>\n          Already have an account?{\" \"}\n          <Link to=\"/\" className=\"text-lime-600 hover:underline\">\n            Log in now\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/login.tsx",["75","76"],"import { gql, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { FormError } from \"../components/form-error\";\nimport nuberLogo from \"../images/logo.svg\";\nimport { Button } from \"../components/button\";\nimport { Link } from \"react-router-dom\";\nimport {\n  loginMutation,\n  loginMutationVariables\n} from \"../__generated__/loginMutation\";\nimport { isLoggedInVar, authTokenVar } from \"../apollo\";\nimport { LOCALSTORAGE_TOKEN } from \"../constants\";\n\nconst LOGIN_MUTATION = gql`\n  mutation loginMutation($loginInput: LoginInput!) {\n    login(input: $loginInput) {\n      ok\n      token\n      error\n    }\n  }\n`;\n\ninterface ILoginForm {\n  email: string;\n  password: string;\n  resultError?: string;\n}\n\nexport const Login = () => {\n  const { register, getValues, errors, handleSubmit, formState } = useForm<\n    ILoginForm\n  >({ mode: \"onChange\" });\n  const onCompleted = (data: loginMutation) => {\n    const {\n      login: { ok, token }\n    } = data;\n    if (ok && token) {\n      localStorage.setItem(LOCALSTORAGE_TOKEN, token);\n      authTokenVar(token);\n      isLoggedInVar(true);\n    }\n  };\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\n    loginMutation,\n    loginMutationVariables\n  >(LOGIN_MUTATION, {\n    onCompleted\n  });\n  const onSubmit = () => {\n    if (!loading) {\n      const { email, password } = getValues();\n      loginMutation({\n        variables: {\n          loginInput: {\n            email,\n            password\n          }\n        }\n      });\n    }\n  };\n  return (\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\n      <Helmet>\n        <title>Login | Nuber Eats</title>\n      </Helmet>\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\n        <img alt=\"*\" src={nuberLogo} className=\"w-52 mb-10\" />\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\n          Welcome back\n        </h4>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"grid gap-3 mt-5 w-full\"\n        >\n          <input\n            ref={register({\n              required: \"Email is required\",\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            })}\n            name=\"email\"\n            required\n            type=\"email\"\n            placeholder=\"Email\"\n            className=\"input\"\n          />\n          {errors.email?.type === \"pattern\" && (\n            <FormError errorMessage={\"Please enter a valid email\"} />\n          )}\n          <input\n            ref={register({ required: \"Password is required\" })}\n            required\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"input\"\n          />\n          {errors.password?.message && (\n            <FormError errorMessage={errors.password?.message} />\n          )}\n          {errors.password?.type === \"minLength\" && (\n            <FormError errorMessage=\"Password must be more than 10 chars.\" />\n          )}\n          <Button\n            canClick={formState.isValid}\n            loading={loading}\n            actionText={\"Log in\"}\n          />\n          {loginMutationResult?.login.error && (\n            <FormError errorMessage={loginMutationResult.login.error} />\n          )}\n        </form>\n        <div>\n          New to Nuber?{\" \"}\n          <Link to=\"/create-account\" className=\"text-lime-600 hover:underline\">\n            Create an Account\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/form-error.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/button.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/__generated__/globalTypes.ts",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/constants.ts",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/client/restaurant.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/404.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/header.tsx",["77"],"import { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMe } from \"../hooks/useMe\";\nimport nuberLogo from \"../images/logo.svg\";\n\nexport const Header: React.FC = () => {\n  const { data } = useMe();\n  return (\n    <header className=\"py-4\">\n      <div className=\"w-full px-5 xl:px-0 max-w-screen-xl mx-auto flex justify-between items-center\">\n        <img src={nuberLogo} className=\"w-24\" alt=\"Nuber Eats\" />\n        <span className=\"text-xs\">\n          <Link to=\"/my-profile\">\n            <FontAwesomeIcon icon={faUser} className=\"text-xl\" />\n          </Link>\n        </span>\n      </div>\n    </header>\n  );\n};\n","/Users/jaesunghan/Documents/nuber-eats-frontend/src/hooks/useMe.tsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":75,"column":9,"nodeType":"84","endLine":75,"endColumn":55},{"ruleId":"85","severity":1,"message":"86","line":86,"column":34,"nodeType":"87","messageId":"88","endLine":86,"endColumn":35,"suggestions":"89"},{"ruleId":"85","severity":1,"message":"86","line":86,"column":59,"nodeType":"87","messageId":"88","endLine":86,"endColumn":60,"suggestions":"90"},{"ruleId":"85","severity":1,"message":"86","line":82,"column":34,"nodeType":"87","messageId":"88","endLine":82,"endColumn":35,"suggestions":"91"},{"ruleId":"85","severity":1,"message":"86","line":82,"column":59,"nodeType":"87","messageId":"88","endLine":82,"endColumn":60,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":9,"column":11,"nodeType":"95","messageId":"96","endLine":9,"endColumn":15},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["99","100"],["101","102"],["103","104"],["105","106"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"messageId":"107","fix":"108","desc":"109"},{"messageId":"110","fix":"111","desc":"112"},{"messageId":"107","fix":"113","desc":"109"},{"messageId":"110","fix":"114","desc":"112"},{"messageId":"107","fix":"115","desc":"109"},{"messageId":"110","fix":"116","desc":"112"},{"messageId":"107","fix":"117","desc":"109"},{"messageId":"110","fix":"118","desc":"112"},"removeEscape",{"range":"119","text":"120"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"121","text":"122"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"123","text":"120"},{"range":"124","text":"122"},{"range":"125","text":"120"},{"range":"126","text":"122"},{"range":"127","text":"120"},{"range":"128","text":"122"},[2403,2404],"",[2403,2403],"\\",[2428,2429],[2428,2428],[2245,2246],[2245,2245],[2270,2271],[2270,2270]]