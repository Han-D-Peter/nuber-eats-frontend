[{"/Users/jaesunghan/Documents/nuber-eats-frontend/src/index.tsx":"1","/Users/jaesunghan/Documents/nuber-eats-frontend/src/reportWebVitals.ts":"2","/Users/jaesunghan/Documents/nuber-eats-frontend/src/apollo.ts":"3","/Users/jaesunghan/Documents/nuber-eats-frontend/src/routers/logged-out-router.tsx":"4","/Users/jaesunghan/Documents/nuber-eats-frontend/src/routers/logged-in-router.tsx":"5","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/create-account.tsx":"6","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/login.tsx":"7","/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/form-error.tsx":"8","/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/button.tsx":"9","/Users/jaesunghan/Documents/nuber-eats-frontend/src/constants.ts":"10","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/404.tsx":"11","/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/header.tsx":"12","/Users/jaesunghan/Documents/nuber-eats-frontend/src/hooks/useMe.tsx":"13","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/user/confirm-email.tsx":"14","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/user/edit-profile.tsx":"15","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/client/restaurants.tsx":"16","/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/restaurant.tsx":"17","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/client/search.tsx":"18","/Users/jaesunghan/Documents/nuber-eats-frontend/src/fragments.ts":"19","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/client/category.tsx":"20","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/client/restaurant.tsx":"21","/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/app.tsx":"22","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/owner/my-restaurants.tsx":"23","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/owner/add-restaurants.tsx":"24","/Users/jaesunghan/Documents/nuber-eats-frontend/src/__generated__/globalTypes.ts":"25","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/owner/my-restaurant.tsx":"26","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/owner/add-dish.tsx":"27"},{"size":770,"mtime":1612225474010,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1611193311394,"results":"30","hashOfConfig":"29"},{"size":986,"mtime":1611639099746,"results":"31","hashOfConfig":"29"},{"size":565,"mtime":1611640978104,"results":"32","hashOfConfig":"29"},{"size":2458,"mtime":1612423569505,"results":"33","hashOfConfig":"29"},{"size":4154,"mtime":1612314049253,"results":"34","hashOfConfig":"29"},{"size":3665,"mtime":1612242328500,"results":"35","hashOfConfig":"29"},{"size":257,"mtime":1612238083370,"results":"36","hashOfConfig":"29"},{"size":503,"mtime":1612241057165,"results":"37","hashOfConfig":"29"},{"size":49,"mtime":1611639008807,"results":"38","hashOfConfig":"29"},{"size":588,"mtime":1611886617727,"results":"39","hashOfConfig":"29"},{"size":975,"mtime":1611880907990,"results":"40","hashOfConfig":"29"},{"size":288,"mtime":1612230904104,"results":"41","hashOfConfig":"29"},{"size":1559,"mtime":1611881588290,"results":"42","hashOfConfig":"29"},{"size":2436,"mtime":1611881625334,"results":"43","hashOfConfig":"29"},{"size":4171,"mtime":1611899092861,"results":"44","hashOfConfig":"29"},{"size":666,"mtime":1611898555098,"results":"45","hashOfConfig":"29"},{"size":1327,"mtime":1611891076298,"results":"46","hashOfConfig":"29"},{"size":579,"mtime":1612421712575,"results":"47","hashOfConfig":"29"},{"size":1016,"mtime":1611896739370,"results":"48","hashOfConfig":"29"},{"size":1583,"mtime":1611898698644,"results":"49","hashOfConfig":"29"},{"size":392,"mtime":1612225441568,"results":"50","hashOfConfig":"29"},{"size":1758,"mtime":1612415836314,"results":"51","hashOfConfig":"29"},{"size":4540,"mtime":1612416614089,"results":"52","hashOfConfig":"29"},{"size":1684,"mtime":1612425192687,"results":"53","hashOfConfig":"29"},{"size":1990,"mtime":1612423233249,"results":"54","hashOfConfig":"29"},{"size":4601,"mtime":1612428054438,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"ccxq2u",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jaesunghan/Documents/nuber-eats-frontend/src/index.tsx",[],["123","124"],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/reportWebVitals.ts",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/apollo.ts",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/routers/logged-out-router.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/routers/logged-in-router.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/create-account.tsx",["125","126","127"],"import { gql, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button } from \"../components/button\";\nimport { FormError } from \"../components/form-error\";\nimport nuberLogo from \"../images/logo.svg\";\nimport {\n  createAccountMutation,\n  createAccountMutationVariables\n} from \"../__generated__/createAccountMutation\";\nimport { UserRole } from \"../__generated__/globalTypes\";\n\nexport const CREATE_ACCOUNT_MUTATION = gql`\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\n    createAccount(input: $createAccountInput) {\n      ok\n      error\n    }\n  }\n`;\n\ninterface ICreateAccountForm {\n  email: string;\n  password: string;\n  role: UserRole;\n}\n\nexport const CreateAccount = () => {\n  const { register, getValues, errors, handleSubmit, formState } = useForm<\n    ICreateAccountForm\n  >({\n    mode: \"onChange\",\n    defaultValues: {\n      role: UserRole.Client\n    }\n  });\n  const history = useHistory();\n  const onCompleted = (data: createAccountMutation) => {\n    const {\n      createAccount: { ok }\n    } = data;\n    if (ok) {\n      alert(\"Account Created! Log in now!\");\n      history.push(\"/\");\n    }\n  };\n  const [\n    createAccountMutation,\n    { loading, data: createAccountMutationResult }\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\n    CREATE_ACCOUNT_MUTATION,\n    {\n      onCompleted\n    }\n  );\n  const onSubmit = () => {\n    if (!loading) {\n      const { email, password, role } = getValues();\n      createAccountMutation({\n        variables: {\n          createAccountInput: { email, password, role }\n        }\n      });\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\n      <Helmet>\n        <title>Create Account | Nuber Eats</title>\n      </Helmet>\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\n        <img src={nuberLogo} className=\"w-52 mb-10\" />\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\n          Let's get started\n        </h4>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"grid gap-3 mt-5 w-full mb-5\"\n        >\n          <input\n            ref={register({\n              required: \"Email is required\",\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            })}\n            name=\"email\"\n            required\n            type=\"email\"\n            placeholder=\"Email\"\n            className=\"input\"\n          />\n          {errors.email?.message && (\n            <FormError errorMessage={errors.email?.message} />\n          )}\n          {errors.email?.type === \"pattern\" && (\n            <FormError errorMessage={\"Please enter a valid email\"} />\n          )}\n          <input\n            ref={register({ required: \"Password is required\" })}\n            required\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"input\"\n          />\n          {errors.password?.message && (\n            <FormError errorMessage={errors.password?.message} />\n          )}\n          <select\n            name=\"role\"\n            ref={register({ required: true })}\n            className=\"input\"\n          >\n            {Object.keys(UserRole).map((role, index) => (\n              <option key={index}>{role}</option>\n            ))}\n          </select>\n          <Button\n            canClick={formState.isValid}\n            loading={loading}\n            actionText={\"Create Account\"}\n          />\n          {createAccountMutationResult?.createAccount.error && (\n            <FormError\n              errorMessage={createAccountMutationResult.createAccount.error}\n            />\n          )}\n        </form>\n        <div>\n          Already have an account?{\" \"}\n          <Link to=\"/\" className=\"text-lime-600 hover:underline\">\n            Log in now\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/login.tsx",["128","129"],"import { gql, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { FormError } from \"../components/form-error\";\nimport nuberLogo from \"../images/logo.svg\";\nimport { Button } from \"../components/button\";\nimport { Link } from \"react-router-dom\";\nimport {\n  loginMutation,\n  loginMutationVariables\n} from \"../__generated__/loginMutation\";\nimport { isLoggedInVar, authTokenVar } from \"../apollo\";\nimport { LOCALSTORAGE_TOKEN } from \"../constants\";\n\nexport const LOGIN_MUTATION = gql`\n  mutation loginMutation($loginInput: LoginInput!) {\n    login(input: $loginInput) {\n      ok\n      token\n      error\n    }\n  }\n`;\n\ninterface ILoginForm {\n  email: string;\n  password: string;\n  resultError?: string;\n}\n\nexport const Login = () => {\n  const { register, getValues, errors, handleSubmit, formState } = useForm<\n    ILoginForm\n  >({ mode: \"onChange\" });\n  const onCompleted = (data: loginMutation) => {\n    const {\n      login: { ok, token }\n    } = data;\n    if (ok && token) {\n      localStorage.setItem(LOCALSTORAGE_TOKEN, token);\n      authTokenVar(token);\n      isLoggedInVar(true);\n    }\n  };\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\n    loginMutation,\n    loginMutationVariables\n  >(LOGIN_MUTATION, {\n    onCompleted\n  });\n  const onSubmit = () => {\n    if (!loading) {\n      const { email, password } = getValues();\n      loginMutation({\n        variables: {\n          loginInput: {\n            email,\n            password\n          }\n        }\n      });\n    }\n  };\n  return (\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\n      <Helmet>\n        <title>Login | Nuber Eats</title>\n      </Helmet>\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\n        <img alt=\"*\" src={nuberLogo} className=\"w-52 mb-10\" />\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\n          Welcome back\n        </h4>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"grid gap-3 mt-5 w-full\"\n        >\n          <input\n            ref={register({\n              required: \"Email is required\",\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            })}\n            name=\"email\"\n            required\n            type=\"email\"\n            placeholder=\"Email\"\n            className=\"input\"\n          />\n          {errors.email?.type === \"pattern\" && (\n            <FormError errorMessage={\"Please enter a valid email\"} />\n          )}\n          {errors.email?.message && (\n            <FormError errorMessage={errors.email?.message} />\n          )}\n          <input\n            ref={register({ required: \"Password is required\" })}\n            required\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"input\"\n          />\n          {errors.password?.message && (\n            <FormError errorMessage={errors.password?.message} />\n          )}\n          <Button\n            canClick={formState.isValid}\n            loading={loading}\n            actionText={\"Log in\"}\n          />\n          {loginMutationResult?.login.error && (\n            <FormError errorMessage={loginMutationResult.login.error} />\n          )}\n        </form>\n        <div>\n          New to Nuber?{\" \"}\n          <Link to=\"/create-account\" className=\"text-lime-600 hover:underline\">\n            Create an Account\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/form-error.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/button.tsx",["130"],"import React from \"react\";\n\ninterface IButtonProps {\n  canClick: boolean;\n  loading: boolean;\n  actionText: string;\n}\n\nexport const Button: React.FC<IButtonProps> = ({\n  canClick,\n  loading,\n  actionText\n}) => (\n  <button\n    role=\"button\"\n    className={`text-lg font-medium focus:outline-none text-white py-4  transition-colors ${\n      canClick\n        ? \"bg-lime-600 hover:bg-lime-700\"\n        : \"bg-gray-300 pointer-events-none\"\n    }`}\n  >\n    {loading ? \"Loading...\" : actionText}\n  </button>\n);\n","/Users/jaesunghan/Documents/nuber-eats-frontend/src/constants.ts",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/404.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/header.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/hooks/useMe.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/user/confirm-email.tsx",["131","132","133"],"import { gql, useMutation, useApolloClient } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  verifyEmail,\n  verifyEmailVariables\n} from \"../../__generated__/verifyEmail\";\nimport { useLocation, useHistory } from \"react-router\";\nimport { useMe } from \"../../hooks/useMe\";\n\nconst VERIFY_EMAIL_MUTATION = gql`\n  mutation verifyEmail($input: VerifyEmailInput!) {\n    verifyEmail(input: $input) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const ConfirmEmail = () => {\n  const { data: userData, refetch } = useMe();\n  const client = useApolloClient();\n  const history = useHistory();\n  const onCompleted = async (data: verifyEmail) => {\n    const {\n      verifyEmail: { ok }\n    } = data;\n    if (ok && userData?.me.id) {\n      await refetch();\n      history.push(\"/\");\n    }\n  };\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\n    VERIFY_EMAIL_MUTATION,\n    {\n      onCompleted\n    }\n  );\n  const location = useLocation();\n  useEffect(() => {\n    const [_, code] = window.location.href.split(\"code=\");\n    verifyEmail({\n      variables: {\n        input: {\n          code\n        }\n      }\n    });\n  }, [verifyEmail]);\n  return (\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\n      <Helmet>\n        <title>Verify Email | Nuber Eats</title>\n      </Helmet>\n      <h2 className=\"text-lg mb-1 font-medium\">Confirming email...</h2>\n      <h4 className=\"text-gray-700 text-sm\">\n        Please wait, don't close this page...\n      </h4>\n    </div>\n  );\n};\n","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/user/edit-profile.tsx",["134"],"import { gql, useMutation, useApolloClient } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"../../components/button\";\nimport { useMe } from \"../../hooks/useMe\";\nimport {\n  editProfile,\n  editProfileVariables\n} from \"../../__generated__/editProfile\";\n\nconst EDIT_PROFILE_MUTATION = gql`\n  mutation editProfile($input: EditProfileInput!) {\n    editProfile(input: $input) {\n      ok\n      error\n    }\n  }\n`;\n\ninterface IFormProps {\n  email?: string;\n  password?: string;\n}\n\nexport const EditProfile = () => {\n  const { data: userData, refetch: refreshUser } = useMe();\n  const client = useApolloClient();\n  const onCompleted = async (data: editProfile) => {\n    const {\n      editProfile: { ok }\n    } = data;\n    if (ok && userData) {\n      await refreshUser();\n    }\n  };\n  const [editProfile, { loading }] = useMutation<\n    editProfile,\n    editProfileVariables\n  >(EDIT_PROFILE_MUTATION, {\n    onCompleted\n  });\n  const { register, handleSubmit, getValues, formState } = useForm<IFormProps>({\n    mode: \"onChange\",\n    defaultValues: {\n      email: userData?.me.email\n    }\n  });\n  const onSubmit = () => {\n    const { email, password } = getValues();\n    editProfile({\n      variables: {\n        input: {\n          email,\n          ...(password !== \"\" && { password })\n        }\n      }\n    });\n  };\n  return (\n    <div className=\"mt-52 flex flex-col justify-center items-center\">\n      <Helmet>\n        <title>Edit Profile | Nuber Eats</title>\n      </Helmet>\n      <h4 className=\"font-semibold text-2xl mb-3\">Edit Profile</h4>\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        className=\"grid max-w-screen-sm gap-3 mt-5 w-full mb-5\"\n      >\n        <input\n          ref={register({\n            pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n          })}\n          name=\"email\"\n          className=\"input\"\n          type=\"email\"\n          placeholder=\"Email\"\n        />\n        <input\n          ref={register}\n          name=\"password\"\n          className=\"input\"\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <Button\n          loading={loading}\n          canClick={formState.isValid}\n          actionText=\"Save Profile\"\n        />\n      </form>\n    </div>\n  );\n};\n","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/client/restaurants.tsx",["135"],"import { gql, useQuery } from \"@apollo/client\";\nimport { url } from \"inspector\";\nimport React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Restaurant } from \"../../components/restaurant\";\nimport { CATEGORY_FRAGMENT, RESTAURANT_FRAGMENT } from \"../../fragments\";\nimport {\n  restaurantsPageQuery,\n  restaurantsPageQueryVariables\n} from \"../../__generated__/restaurantsPageQuery\";\n\nconst RESTAURANTS_QUERY = gql`\n  query restaurantsPageQuery($input: RestaurantsInput!) {\n    allCategories {\n      ok\n      error\n      categories {\n        ...CategoryParts\n      }\n    }\n    restaurants(input: $input) {\n      ok\n      error\n      totalPages\n      totalResults\n      results {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n  ${CATEGORY_FRAGMENT}\n`;\n\ninterface IFormProps {\n  searchTerm: string;\n}\n\nexport const Restaurants = () => {\n  const [page, setPage] = useState(1);\n  const { data, loading } = useQuery<\n    restaurantsPageQuery,\n    restaurantsPageQueryVariables\n  >(RESTAURANTS_QUERY, {\n    variables: {\n      input: {\n        page\n      }\n    }\n  });\n  const onNextPageClick = () => setPage(current => current + 1);\n  const onPrevPageClick = () => setPage(current => current - 1);\n  const { register, handleSubmit, getValues } = useForm<IFormProps>();\n  const history = useHistory();\n  const onSearchSubmit = () => {\n    const { searchTerm } = getValues();\n    history.push({\n      pathname: \"/search\",\n      search: `?term=${searchTerm}`\n    });\n  };\n  return (\n    <div>\n      <Helmet>\n        <title>Home | Nuber Eats</title>\n      </Helmet>\n      <form\n        onSubmit={handleSubmit(onSearchSubmit)}\n        className=\"bg-gray-800 w-full py-40 flex items-center justify-center\"\n      >\n        <input\n          ref={register({ required: true, min: 3 })}\n          name=\"searchTerm\"\n          type=\"Search\"\n          className=\"input rounded-md border-0 w-3/4 md:w-3/12\"\n          placeholder=\"Search restaurants...\"\n        />\n      </form>\n      {!loading && (\n        <div className=\"max-w-screen-2xl pb-20 mx-auto mt-8\">\n          <div className=\"flex justify-around max-w-sm mx-auto \">\n            {data?.allCategories.categories?.map(category => (\n              <Link key={category.id} to={`/category/${category.slug}`}>\n                <div className=\"flex flex-col group items-center cursor-pointer\">\n                  <div\n                    className=\" w-16 h-16 bg-cover group-hover:bg-gray-100 rounded-full\"\n                    style={{ backgroundImage: `url(${category.coverImg})` }}\n                  ></div>\n                  <span className=\"mt-1 text-sm text-center font-medium\">\n                    {category.name}\n                  </span>\n                </div>\n              </Link>\n            ))}\n          </div>\n          <div className=\"grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\n            {data?.restaurants.results?.map(restaurant => (\n              <Restaurant\n                key={restaurant.id}\n                id={restaurant.id + \"\"}\n                coverImg={restaurant.coverImg}\n                name={restaurant.name}\n                categoryName={restaurant.category?.name}\n              />\n            ))}\n          </div>\n          <div className=\"grid grid-cols-3 text-center max-w-md items-center mx-auto mt-10\">\n            {page > 1 ? (\n              <button\n                onClick={onPrevPageClick}\n                className=\"focus:outline-none font-medium text-2xl\"\n              >\n                &larr;\n              </button>\n            ) : (\n              <div></div>\n            )}\n            <span>\n              Page {page} of {data?.restaurants.totalPages}\n            </span>\n            {page !== data?.restaurants.totalPages ? (\n              <button\n                onClick={onNextPageClick}\n                className=\"focus:outline-none font-medium text-2xl\"\n              >\n                &rarr;\n              </button>\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n",["136","137"],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/restaurant.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/client/search.tsx",["138","139"],"import { gql, useLazyQuery } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\nimport {\n  searchRestaurant,\n  searchRestaurantVariables\n} from \"../../__generated__/searchRestaurant\";\n\nconst SEARCH_RESTAURANT = gql`\n  query searchRestaurant($input: SearchRestaurantInput!) {\n    searchRestaurant(input: $input) {\n      ok\n      error\n      totalPages\n      totalResults\n      restaurants {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n`;\n\nexport const Search = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const [callQuery, { loading, data, called }] = useLazyQuery<\n    searchRestaurant,\n    searchRestaurantVariables\n  >(SEARCH_RESTAURANT);\n  useEffect(() => {\n    const [_, query] = location.search.split(\"?term=\");\n    if (!query) {\n      return history.replace(\"/\");\n    }\n    callQuery({\n      variables: {\n        input: {\n          page: 1,\n          query\n        }\n      }\n    });\n  }, [history, location]);\n  console.log(loading, data, called);\n  return (\n    <div>\n      <Helmet>\n        <title>Search | Nuber Eats</title>\n      </Helmet>\n      <h1>Search page</h1>\n    </div>\n  );\n};\n","/Users/jaesunghan/Documents/nuber-eats-frontend/src/fragments.ts",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/client/category.tsx",["140","141","142","143"],"import React, { useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { RESTAURANT_FRAGMENT, CATEGORY_FRAGMENT } from \"../../fragments\";\nimport { useQuery } from \"@apollo/client\";\nimport { category, categoryVariables } from \"../../__generated__/category\";\n\nconst CATEGORY_QUERY = gql`\n  query category($input: CategoryInput!) {\n    category(input: $input) {\n      ok\n      error\n      totalPages\n      totalResults\n      restaurants {\n        ...RestaurantParts\n      }\n      category{\n        ...CategoryParts\n      }\n    }\n    ${RESTAURANT_FRAGMENT}\n    ${CATEGORY_FRAGMENT}\n  }\n`;\n\ninterface ICategoryParams {\n  slug: string;\n}\n\nexport const Category = () => {\n  const params = useParams<ICategoryParams>();\n  const { data, loading } = useQuery<category, categoryVariables>(\n    CATEGORY_QUERY,\n    {\n      variables: {\n        input: {\n          page: 1,\n          slug: params.slug\n        }\n      }\n    }\n  );\n  return <h1>Category</h1>;\n};\n","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/client/restaurant.tsx",["144"],"import { gql, useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\nimport {\n  restaurant,\n  restaurantVariables\n} from \"../../__generated__/restaurant\";\nimport { Helmet } from \"react-helmet\";\n\nconst RESTAURANT_QUERY = gql`\n  query restaurant($input: RestaurantInput!) {\n    restaurant(input: $input) {\n      ok\n      error\n      restaurant {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n`;\n\ninterface IRestaurantParams {\n  id: string;\n}\n\nexport const Restaurant = () => {\n  const params = useParams<IRestaurantParams>();\n  const { loading, data } = useQuery<restaurant, restaurantVariables>(\n    RESTAURANT_QUERY,\n    {\n      variables: {\n        input: {\n          restaurantId: +params.id\n        }\n      }\n    }\n  );\n  return (\n    <div>\n      <Helmet>\n        <title>{data?.restaurant.restaurant?.name || \"\"} | Nuber Eats</title>\n      </Helmet>\n      <div\n        className=\" bg-gray-800 bg-center bg-cover py-48\"\n        style={{\n          backgroundImage: `url(${data?.restaurant.restaurant?.coverImg})`\n        }}\n      >\n        <div className=\"bg-white w-3/12 py-8 pl-48\">\n          <h4 className=\"text-4xl mb-3\">{data?.restaurant.restaurant?.name}</h4>\n          <h5 className=\"text-sm font-light mb-2\">\n            {data?.restaurant.restaurant?.category?.name}\n          </h5>\n          <h6 className=\"text-sm font-light\">\n            {data?.restaurant.restaurant?.address}\n          </h6>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/jaesunghan/Documents/nuber-eats-frontend/src/components/app.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/owner/my-restaurants.tsx",["145","146"],"import { gql, useQuery, useApolloClient } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link } from \"react-router-dom\";\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\nimport { myRestaurants } from \"../../__generated__/myRestaurants\";\nimport { Restaurant } from \"../../components/restaurant\";\n\nexport const MY_RESTAURANTS_QUERY = gql`\n  query myRestaurants {\n    myRestaurants {\n      ok\n      error\n      restaurants {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n`;\n\nexport const MyRestaurants = () => {\n  const { data } = useQuery<myRestaurants>(MY_RESTAURANTS_QUERY);\n  return (\n    <div>\n      <Helmet>\n        <title>My Restaurants | Nuber Eats</title>\n      </Helmet>\n      <div className=\"max-w-screen-2xl mx-auto mt-32\">\n        <h2 className=\"text-4xl font-medium mb-10\">My Restaurants</h2>\n        {data?.myRestaurants.ok &&\n        data.myRestaurants.restaurants.length === 0 ? (\n          <>\n            <h4 className=\"text-xl mb-5\">You have no restaurants.</h4>\n            <Link\n              className=\"text-lime-600 hover:underline\"\n              to=\"/add-restaurant\"\n            >\n              Create one &rarr;\n            </Link>\n          </>\n        ) : (\n          <div className=\"grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\n            {data?.myRestaurants.restaurants.map(restaurant => (\n              <Restaurant\n                key={restaurant.id}\n                id={restaurant.id + \"\"}\n                coverImg={restaurant.coverImg}\n                name={restaurant.name}\n                categoryName={restaurant.category?.name}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/owner/add-restaurants.tsx",["147","148","149"],"import { gql, useMutation, useApolloClient } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"../../components/button\";\nimport {\n  createRestaurant,\n  createRestaurantVariables\n} from \"../../__generated__/createRestaurant\";\nimport { CREATE_ACCOUNT_MUTATION } from \"../create-account\";\nimport { FormError } from \"../../components/form-error\";\nimport { MY_RESTAURANTS_QUERY } from \"./my-restaurants\";\nimport { useHistory } from \"react-router\";\n\nconst CREATE_RESTAURANT_MUTATION = gql`\n  mutation createRestaurant($input: CreateRestaurantInput!) {\n    createRestaurant(input: $input) {\n      error\n      ok\n      restaurantId\n    }\n  }\n`;\n\ninterface IFormProps {\n  name: string;\n  address: string;\n  categoryName: string;\n  file: FileList;\n}\n\nexport const AddRestaurant = () => {\n  const client = useApolloClient();\n  const history = useHistory();\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const onCompleted = (data: createRestaurant) => {\n    const {\n      createRestaurant: { ok, restaurantId }\n    } = data;\n    if (ok) {\n      const { file, name, categoryName, address } = getValues();\n      setUploading(false);\n      const queryResult = client.readQuery({ query: MY_RESTAURANTS_QUERY });\n      client.writeQuery({\n        query: MY_RESTAURANTS_QUERY,\n        data: {\n          myRestaurants: {\n            ...queryResult.myRestaurants,\n            restaurants: [\n              {\n                address,\n                category: {\n                  name: categoryName,\n                  __typename: \"Category\",\n                  __proto__: Object\n                },\n                coverImg: imageUrl,\n                id: restaurantId,\n                isPromoted: false,\n                name,\n                __typename: \"Restaurant\"\n              },\n              ...queryResult.myREstaurants.restaurants\n            ]\n          }\n        }\n      });\n      history.push(\"/\");\n    }\n  };\n  const [createRestaurantMutation, { loading, data }] = useMutation<\n    createRestaurant,\n    createRestaurantVariables\n  >(CREATE_RESTAURANT_MUTATION, {\n    onCompleted,\n    refetchQueries: [{ query: MY_RESTAURANTS_QUERY }]\n  });\n  const { register, getValues, formState, handleSubmit } = useForm<IFormProps>({\n    mode: \"onChange\"\n  });\n  const [uploading, setUploading] = useState(false);\n  const onSubmit = async () => {\n    try {\n      setUploading(true);\n      const { file, name, categoryName, address } = getValues();\n      const actualFile = file[0];\n      const formBody = new FormData();\n      formBody.append(\"file\", actualFile);\n      const { url: coverImg } = await (\n        await fetch(`http://localhost:4000/uploads/`, {\n          method: \"POST\",\n          body: formBody\n        })\n      ).json();\n      setImageUrl(coverImg);\n      createRestaurantMutation({\n        variables: {\n          input: {\n            name,\n            categoryName,\n            address,\n            coverImg\n          }\n        }\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return (\n    <div className=\"container flex flex-col items-center mt-52\">\n      <Helmet>\n        <title>Add Restaurant | Nuber Eats</title>\n      </Helmet>\n      <h4 className=\"font-semibold text-2xl mb-3\">Add Restaurant</h4>\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        className=\"grid max-w-screen-sm gap-3 mt-5 w-full mb-5\"\n      >\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          ref={register({ required: \"Name is required.\" })}\n        />\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"address\"\n          placeholder=\"Address\"\n          ref={register({ required: \"Address is required.\" })}\n        />\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"categoryName\"\n          placeholder=\"Category Name\"\n          ref={register({ required: \"Category Name is required.\" })}\n        />\n        <div>\n          <input\n            type=\"file\"\n            name=\"file\"\n            accept=\"image/*\"\n            ref={register({ required: true })}\n          />\n        </div>\n        <Button\n          loading={uploading}\n          canClick={formState.isValid}\n          actionText=\"Create Restaurant\"\n        />\n        {data?.createRestaurant?.error && (\n          <FormError errorMessage={data.createRestaurant.error} />\n        )}\n      </form>\n    </div>\n  );\n};\n","/Users/jaesunghan/Documents/nuber-eats-frontend/src/__generated__/globalTypes.ts",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/owner/my-restaurant.tsx",[],"/Users/jaesunghan/Documents/nuber-eats-frontend/src/pages/owner/add-dish.tsx",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":75,"column":9,"nodeType":"156","endLine":75,"endColumn":55},{"ruleId":"157","severity":1,"message":"158","line":86,"column":34,"nodeType":"159","messageId":"160","endLine":86,"endColumn":35,"suggestions":"161"},{"ruleId":"157","severity":1,"message":"158","line":86,"column":59,"nodeType":"159","messageId":"160","endLine":86,"endColumn":60,"suggestions":"162"},{"ruleId":"157","severity":1,"message":"158","line":82,"column":34,"nodeType":"159","messageId":"160","endLine":82,"endColumn":35,"suggestions":"163"},{"ruleId":"157","severity":1,"message":"158","line":82,"column":59,"nodeType":"159","messageId":"160","endLine":82,"endColumn":60,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":14,"column":3,"nodeType":"156","endLine":21,"endColumn":4},{"ruleId":"167","severity":1,"message":"168","line":22,"column":9,"nodeType":"169","messageId":"170","endLine":22,"endColumn":15},{"ruleId":"167","severity":1,"message":"171","line":39,"column":9,"nodeType":"169","messageId":"170","endLine":39,"endColumn":17},{"ruleId":"167","severity":1,"message":"172","line":41,"column":12,"nodeType":"169","messageId":"170","endLine":41,"endColumn":13},{"ruleId":"167","severity":1,"message":"168","line":28,"column":9,"nodeType":"169","messageId":"170","endLine":28,"endColumn":15},{"ruleId":"167","severity":1,"message":"173","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":13},{"ruleId":"150","replacedBy":"174"},{"ruleId":"152","replacedBy":"175"},{"ruleId":"167","severity":1,"message":"172","line":34,"column":12,"nodeType":"169","messageId":"170","endLine":34,"endColumn":13},{"ruleId":"176","severity":1,"message":"177","line":46,"column":6,"nodeType":"178","endLine":46,"endColumn":25,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"180","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"181","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":21},{"ruleId":"167","severity":1,"message":"182","line":33,"column":11,"nodeType":"169","messageId":"170","endLine":33,"endColumn":15},{"ruleId":"167","severity":1,"message":"183","line":33,"column":17,"nodeType":"169","messageId":"170","endLine":33,"endColumn":24},{"ruleId":"167","severity":1,"message":"183","line":30,"column":11,"nodeType":"169","messageId":"170","endLine":30,"endColumn":18},{"ruleId":"167","severity":1,"message":"184","line":1,"column":25,"nodeType":"169","messageId":"170","endLine":1,"endColumn":40},{"ruleId":"167","severity":1,"message":"180","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":26},{"ruleId":"167","severity":1,"message":"185","line":10,"column":10,"nodeType":"169","messageId":"170","endLine":10,"endColumn":33},{"ruleId":"167","severity":1,"message":"186","line":41,"column":15,"nodeType":"169","messageId":"170","endLine":41,"endColumn":19},{"ruleId":"167","severity":1,"message":"183","line":71,"column":38,"nodeType":"169","messageId":"170","endLine":71,"endColumn":45},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["189","190"],["191","192"],["193","194"],["195","196"],"jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","@typescript-eslint/no-unused-vars","'client' is assigned a value but never used.","Identifier","unusedVar","'location' is assigned a value but never used.","'_' is assigned a value but never used.","'url' is defined but never used.",["187"],["188"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callQuery'. Either include it or remove the dependency array.","ArrayExpression",["197"],"'useEffect' is defined but never used.","'useLocation' is defined but never used.","'data' is assigned a value but never used.","'loading' is assigned a value but never used.","'useApolloClient' is defined but never used.","'CREATE_ACCOUNT_MUTATION' is defined but never used.","'file' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"198","fix":"199","desc":"200"},{"messageId":"201","fix":"202","desc":"203"},{"messageId":"198","fix":"204","desc":"200"},{"messageId":"201","fix":"205","desc":"203"},{"messageId":"198","fix":"206","desc":"200"},{"messageId":"201","fix":"207","desc":"203"},{"messageId":"198","fix":"208","desc":"200"},{"messageId":"201","fix":"209","desc":"203"},{"desc":"210","fix":"211"},"removeEscape",{"range":"212","text":"213"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"214","text":"215"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"216","text":"213"},{"range":"217","text":"215"},{"range":"218","text":"213"},{"range":"219","text":"215"},{"range":"220","text":"213"},{"range":"221","text":"215"},"Update the dependencies array to be: [callQuery, history, location]",{"range":"222","text":"223"},[2410,2411],"",[2410,2410],"\\",[2435,2436],[2435,2435],[2252,2253],[2252,2252],[2277,2278],[2277,2277],[1126,1145],"[callQuery, history, location]"]